import math
from functools import reduce
import this
print("给你一个列表 L, 对L进行升序排序并输出排序后的列表。")
# 给你一个列表 L, 对L进行升序排序并输出排序后的列表。
# 例如：L = [8,2,50,3]
# 则输出：[2,3,8,50]
L = [8, 2, 50, 3]
L.sort()
print(L)

print("给你一个字符串 a， 请你输出逆序之后的a。")
# 给你一个字符串 a， 请你输出逆序之后的a。
# 例如：a=‘xydz’
# 则输出：zdyx
a = 'xydz'
print(a[::-1])

print("给你一字典a，如a={1:1,2:2,3:3}，输出字典a的key，以','连接")
# 给你一字典a，如a={1:1,2:2,3:3}，输出字典a的key，以','连接，如‘1,2,3'。要求key按照字典序升序排列(注意key可能是字符串）。
# 例如：a={1:1,2:2,3:3}, 则输出：1,2,3
a = {1: 1, 2: 2, 3: 3}
print(','.join(str(i) for i in sorted(a)))

print("给你一个字符串 a， 输出a中奇数位置字符构成的字符串（位置编号从1开始）。")
# 给你一个字符串 a， 输出a中奇数位置字符构成的字符串（位置编号从1开始）。
# 例如：a=‘xyzwd’
# 则输出:xzd
a = 'xyzwd'
print(a[::2])

print("输出100以内的所有素数，素数之间以一个空格区分")
# 输出100以内的所有素数，素数之间以一个空格区分（注意，最后一个数字之后不能有空格）。
# 质数（prime number）又称素数，有无限个。质数定义为在大于1的自然数中，除了1和它本身以外不再有其他因数，这样的数称为质数。
priNum = []
count = 0
for i in range(2, 101):
    for j in range(2, i):
        if i == j:
            break
        if i % j == 0:
            count += 1
    if count == 0:
        priNum.append(i)
    count = 0
print(' '.join(str(i) for i in priNum))
# ============更好的解法============
# 在一般领域，对正整数n，如果用2到  之间的所有整数去除，均无法整除，则n为质数。
# 质数大于等于2 不能被它本身和1以外的数整除
# from math import sqrt
# def is_prime(n):
#     if n == 1:
#         return False
#     for i in range(2, int(sqrt(n))+1):
#         if n % i == 0:
#             return False
#     return True
# def is_prime(x, n):
#     if n == x:
#         return True
#     if x % n == 0:
#         return False
#     n += 1
#     return is_prime(x, n)

print("已知矩形长a,宽b,输出其面积和周长，面积和周长以一个空格隔开。")
# 已知矩形长a,宽b,输出其面积和周长，面积和周长以一个空格隔开。
# 例如：a = 3, b = 8
# 则输出：24 22
a = 3
b = 8
print('%d %d' % ((a * b), (a + b) * 2))

print("给你一个整数列表L, 输出L的中位数（若结果为小数，则保留一位小数）。")
# 给你一个整数列表L, 输出L的中位数（若结果为小数，则保留一位小数）。
# 例如： L=[0,1,2,3,4]
# 则输出：2
L = [0, 1, 2, 3, 4]
L.sort()
a = len(L) / 2
b = int((len(L) - 1) / 2)
if a % 2 == 1:
    print('%.1f' % ((L[b] + L[b + 1]) / 2))
else:
    print('%.1f' % L[b])

print("给你两个正整数a和b， 输出它们的最大公约数。")
# 给你两个正整数a和b， 输出它们的最大公约数。
# 例如：a = 3, b = 5
# 则输出：1
a = 30
b = 50


# def gcd(a, b):
#     minNum = min(a, b)
#     max = 1
#     for i in range(1, minNum + 1):
#         if a % i == 0 and b % i == 0:
#             max = i
#     return max
# ============更好的解法============


def gcd(a, b):
    return gcd(b, a % b) if b > 0 else a


print(gcd(a, b))

print("给你两个正整数a和b， 输出它们的最小公倍数。")
# 给你两个正整数a和b， 输出它们的最小公倍数。
# 例如：a = 3, b = 5
# 则输出：15
a = 4
b = 6
c = gcd(a, b)
print(a * b // c)

print("给你一个正整数列表 L, 输出L内所有数字的乘积末尾0的个数。")
# 给你一个正整数列表 L, 输出L内所有数字的乘积末尾0的个数。(提示:不要直接相乘,数字很多,相乘得到的结果可能会很大)。
# 例如： L=[2,8,3,50]
# 则输出：2
L = [50, 100, 20, 2]
c = {"2": 0, "5": 0}


def f1(x):
    while(x % 2 == 0):
        c["2"] += 1
        x /= 2
    while(x % 5 == 0):
        c["5"] += 1
        x /= 5


list(map(f1, L))
print(min(c["2"], c["5"]))

print("给你一个正整数列表 L, 判断列表内所有数字乘积的最后一个非零数字的奇偶性。如果为奇数输出1,偶数则输出0.。")
# 给你一个正整数列表 L, 判断列表内所有数字乘积的最后一个非零数字的奇偶性。如果为奇数输出1,偶数则输出0.。
# 例如：L=[2,8,3,50]
# 则输出：0
# 奇数×奇数=奇数，偶数×奇数=偶数，偶数×偶数=偶数
L = [2, 5, 3, 6, ]  # 2, 3, 5, 6, 7, 9, 10, 11, 13, 14
c = [0, 0]


for i in L:
    if i % 2 == 0:
        L[0] += 1
    if i % 5 == 0:
        L[1] += 1
if L[0] > L[1]:
    print(0)
else:
    print(1)

print("给你一个整数a，数出a在二进制表示下1的个数，并输出。")
# 光棍们对1总是那么敏感，因此每年的11.11被戏称为光棍节。小Py光棍几十载，光棍自有光棍的快乐。让我们勇敢地面对光棍的身份吧，现在就证明自己：
# 给你一个整数a，数出a在二进制表示下1的个数，并输出。
# 例如：a=7
# 则输出：3
a = 42
count = 0
while a * 2 // 2 != 0:
    if a % 2 == 1:
        count += 1
    a //= 2
print(count)
# ============更好的解法============
print(bin(7).count('1'))

print("输出Python之禅")
# 输出Python之禅。
# 注意：输出python之禅的源码即可，不要转换为英文。（小小的提示：print this.s)
# import this
print(this.s)

print("给定一个字符串a, 将a中的大写字母 转换成小写，其它字符不变，并输出。")
# 给定一个字符串a, 将a中的大写字母 转换成小写，其它字符不变，并输出。
# 例如：a="aaaaaabbbDDDDD"
# 则输出：aaaaaabbbddddd
a = "aaaaaabbbDDDDD"
print(a.lower())

print("人民币金额打印 ")
# 银行在打印票据的时候，常常需要将阿拉伯数字表示的人民币金额转换为大写表示，现在请你来完成这样一个程序。
# 在中文大写方式中，0到10以及100、1000、10000被依次表示为：    零 壹 贰 叁 肆 伍 陆 柒 捌 玖 拾 佰 仟 万
# 以下的例子示范了阿拉伯数字到人民币大写的转换规则：
# 1   壹圆
# 11  壹拾壹圆
# 111 壹佰壹拾壹圆
# 101 壹佰零壹圆
# -1000   负壹仟圆
# 1234567 壹
# 现在给你一个整数a(|a|<100000000), 请你打印出人民币大写表示.
# 例如：a=1
# 则输出：壹圆
# 注意：请以Unicode的形式输出答案。提示：所有的中文字符，在代码中直接使用其Unicode的形式即可满足要求，中文的Unicode编码可以通过如下方式获得：u'壹'。
# 注意：代码无需声明编码！！不要在代码头部声明文件编码，否则会导致语法错误！
# Note：数据已于2013-11-19日加强，原来通过的代码可能不能再次通过。
a = 63163000
L = ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖']
L1 = ['圆', '拾', '佰', '仟', '万', '拾', '佰', '仟']
result = ''
print(a)
a = int(str(a)[::-1])
for i in range(len(str(a)) - 1, -1, -1):
    print(str(a)[i], L[int(str(a)[i])] + L1[i])
    if str(a)[i] == '0':
        break
    result += L[int(str(a)[i])] + L1[i]
print(result)
